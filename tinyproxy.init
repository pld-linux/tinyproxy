#!/bin/sh
#
# tinyproxy	HTTP/HTTPS proxy server
#
# chkconfig:    2345 90 25
#
# description:	tinyproxy is a small HTTP/HTTPS proxy server
#
# $Id$


# Source function library
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network


# Get service config - may override defaults
[ -f /etc/sysconfig/tinyproxy ] && . /etc/sysconfig/tinyproxy

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network ]; then
		msg_network_down tinyproxy
		exit 1
	fi
else
	exit 0
fi


# See how we were called.
case "$1" in
  start)
	# Check if the service is already running?
	if [ ! -f /var/lock/subsys/tinyproxy ]; then
		msg_starting tinyproxy
		daemon tinyproxy
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/tinyproxy
	else
		msg_already_running tinyproxy
		exit 1
	fi
        ;;
  stop)
        # Stop daemons.
	if [ -f /var/lock/subsys/tinyproxy ]; then
		msg_stopping tinyproxy
		killproc tinyproxy
		RETVAL=$?
		rm -f /var/lock/subsys/tinyproxy
	else
		msg_not_running tinyproxy
		exit 1
	fi	
        ;;
  restart)
        $0 stop
	$0 start
        ;;
  reload)
	if [ -f /var/lock/subsys/tinyproxy ]; then
		msg_reloading tinyproxy
		killproc tinyproxy -HUP
		RETVAL=$?
	else
		msg_not_running tinyproxy
		RETVAL=1
	fi
	;;
  force-reload)
  	# if program allows reloading without stopping
	$0 reload

	# or if it doesn't
	$0 stop && $0 start
	;;
  status)
	status <service>
	RETVAL=$?
        ;;
  *)
	msg_usage "$0 {start|stop|status|restart|reload|force-reload}"
        exit 1
esac

exit $RETVAL

# This must be last line !
# vi:syntax=sh:tw=78:ts=8:sw=4
